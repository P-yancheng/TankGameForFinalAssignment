<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node14" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Bullet&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Bullet(): &lt;br/&gt;+ Bullet(int, int, int, int, Color): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- y: int&lt;br/&gt;- atk: int&lt;br/&gt;+ RADIUS: int&lt;br/&gt;- visible: boolean&lt;br/&gt;- dir: int&lt;br/&gt;- color: Color&lt;br/&gt;- speed: int&lt;br/&gt;+ DEFAULT_SPEED: int&lt;br/&gt;- x: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getY(): int&lt;br/&gt;+ getAtk(): int&lt;br/&gt;- logic(): void&lt;br/&gt;+ getSpeed(): int&lt;br/&gt;+ getColor(): Color&lt;br/&gt;+ draw(Graphics): void&lt;br/&gt;- move(): void&lt;br/&gt;+ getDir(): int&lt;br/&gt;+ setY(int): void&lt;br/&gt;+ setX(int): void&lt;br/&gt;+ setDir(int): void&lt;br/&gt;+ setSpeed(int): void&lt;br/&gt;+ setVisible(boolean): void&lt;br/&gt;+ setColor(Color): void&lt;br/&gt;+ setAtk(int): void&lt;br/&gt;+ isVisible(): boolean&lt;br/&gt;+ getX(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="592" y="1015" width="222" height="713" as="geometry" />
    </mxCell>
    <mxCell id="node8" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;BulletsPool&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ BulletsPool(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ POOL_MAX_SIZE: int&lt;br/&gt;- pool: List&amp;lt;Bullet&amp;gt;&lt;br/&gt;+ DEFAULT_POOL_SIZE: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ theReturn(Bullet): void&lt;br/&gt;+ get(): Bullet&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="482" y="2439" width="202" height="185" as="geometry" />
    </mxCell>
    <mxCell id="node6" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Constant&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Constant(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ STATE_MENU: int&lt;br/&gt;+ OVER_STR0: String&lt;br/&gt;+ REPAINT_INTERVAL: int&lt;br/&gt;+ GAME_TITLE: String&lt;br/&gt;+ SMALL_FONT: Font&lt;br/&gt;+ STATE_ABOUT: int&lt;br/&gt;+ GAME_FONT: Font&lt;br/&gt;+ FRAME_WIDTH: int&lt;br/&gt;+ FRAME_HEIGHT: int&lt;br/&gt;+ STATE_RUN: int&lt;br/&gt;+ ENEMY_FIRE_PERCENT: double&lt;br/&gt;+ FRAME_Y: int&lt;br/&gt;+ MENUS: String[]&lt;br/&gt;+ STATE_LOST: int&lt;br/&gt;+ SCREEN_W: int&lt;br/&gt;+ STATE_WIN: int&lt;br/&gt;+ STATE_CROSS: int&lt;br/&gt;+ SCREEN_H: int&lt;br/&gt;+ ENEMY_BORN_INTERVAL: int&lt;br/&gt;+ STATE_HELP: int&lt;br/&gt;+ ENEMY_MAX_COUNT: int&lt;br/&gt;+ FRAME_X: int&lt;br/&gt;+ ENEMY_AI_INTERVAL: int&lt;br/&gt;+ OVER_STR1: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1044" y="-509" width="239" height="640" as="geometry" />
    </mxCell>
    <mxCell id="node16" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;EnemyTank&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- EnemyTank(int, int, int): &lt;br/&gt;+ EnemyTank(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- greenImg: Image[]&lt;br/&gt;- type: int&lt;br/&gt;- aiTime: long&lt;br/&gt;- yellowImg: Image[]&lt;br/&gt;+ TYPE_GREEN: int&lt;br/&gt;+ TYPE_YELLOW: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setType(int): void&lt;br/&gt;+ drawImgTank(Graphics): void&lt;br/&gt;- ai(): void&lt;br/&gt;+ createEnemy(): Tank&lt;br/&gt;+ getType(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-151" y="2675" width="229" height="353" as="geometry" />
    </mxCell>
    <mxCell id="node15" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;EnemyTanksPool&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ EnemyTanksPool(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DEFAULT_POOL_SIZE: int&lt;br/&gt;- pool: List&amp;lt;Tank&amp;gt;&lt;br/&gt;+ POOL_MAX_SIZE: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ theReturn(Tank): void&lt;br/&gt;+ get(): Tank&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2" y="2439" width="202" height="185" as="geometry" />
    </mxCell>
    <mxCell id="node18" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Explode&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Explode(int, int): &lt;br/&gt;+ Explode(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- x: int&lt;br/&gt;- visible: boolean&lt;br/&gt;- explodeHeight: int&lt;br/&gt;- img: Image[]&lt;br/&gt;+ EXPLODE_FRAME_COUNT: int&lt;br/&gt;- y: int&lt;br/&gt;- explodeWidth: int&lt;br/&gt;- index: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ draw(Graphics): void&lt;br/&gt;+ setVisible(boolean): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setIndex(int): void&lt;br/&gt;+ setX(int): void&lt;br/&gt;+ getX(): int&lt;br/&gt;+ setY(int): void&lt;br/&gt;+ getIndex(): int&lt;br/&gt;+ isVisible(): boolean&lt;br/&gt;+ getY(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="228" y="1111" width="230" height="521" as="geometry" />
    </mxCell>
    <mxCell id="node10" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ExplodesPool&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ExplodesPool(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DEFAULT_POOL_SIZE: int&lt;br/&gt;- pool: List&amp;lt;Explode&amp;gt;&lt;br/&gt;+ POOL_MAX_SIZE: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ theReturn(Explode): void&lt;br/&gt;+ get(): Explode&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="362" y="2759" width="202" height="185" as="geometry" />
    </mxCell>
    <mxCell id="node12" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GameFrame&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GameFrame(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- gameState: int&lt;br/&gt;- bornEnemyCount: int&lt;br/&gt;+ RECT_WIDTH: int&lt;br/&gt;+ titleBarH: int&lt;br/&gt;- aboutImg: Image&lt;br/&gt;- bufImg: BufferedImage&lt;br/&gt;- enemies: List&amp;lt;Tank&amp;gt;&lt;br/&gt;+ RECT_COUNT: int&lt;br/&gt;- gameMap: GameMap&lt;br/&gt;+ flashTime: int&lt;br/&gt;- overImg: Image&lt;br/&gt;- menuIndex: int&lt;br/&gt;- myTank: Tank&lt;br/&gt;+ killEnemyCount: int&lt;br/&gt;+ isOpen: boolean&lt;br/&gt;- helpImg: Image&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- drawMenu(Graphics): void&lt;br/&gt;- keyPressedEventRun(int): void&lt;br/&gt;- keyPressedEventHelp(int): void&lt;br/&gt;- keyPressedEventLost(int): void&lt;br/&gt;+ getGameState(): int&lt;br/&gt;- bulletCollideTank(): void&lt;br/&gt;+ isLastLevel(): boolean&lt;br/&gt;- drawHelp(Graphics): void&lt;br/&gt;- keyPressedEventMenu(int): void&lt;br/&gt;- initEventListener(): void&lt;br/&gt;- startGame(int): void&lt;br/&gt;+ isCrossLevel(): boolean&lt;br/&gt;- drawLost(Graphics, String): void&lt;br/&gt;+ run(): void&lt;br/&gt;- drawExplodes(Graphics): void&lt;br/&gt;+ update(Graphics): void&lt;br/&gt;- initFrame(): void&lt;br/&gt;- keyReleasedEventRun(int): void&lt;br/&gt;- resetGame(): void&lt;br/&gt;+ startCrossLevel(): void&lt;br/&gt;- nextLevel(): void&lt;br/&gt;+ drawCross(Graphics): void&lt;br/&gt;- drawAbout(Graphics): void&lt;br/&gt;+ setGameState(int): void&lt;br/&gt;- drawEnemies(Graphics): void&lt;br/&gt;- bulletAndTanksCollideMapTile(): void&lt;br/&gt;- drawWin(Graphics): void&lt;br/&gt;- keyPressedEventAbout(int): void&lt;br/&gt;- keyPressedEventWin(int): void&lt;br/&gt;- drawRun(Graphics): void&lt;br/&gt;- initGame(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="725" y="-785" width="277" height="1193" as="geometry" />
    </mxCell>
    <mxCell id="node3" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GameInfo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GameInfo(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- levelCount: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getLevelCount(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="39" y="-945" width="168" height="122" as="geometry" />
    </mxCell>
    <mxCell id="node4" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GameMain&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GameMain(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ main(String[]): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-160" y="-933" width="166" height="95" as="geometry" />
    </mxCell>
    <mxCell id="node17" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GameMap&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GameMap(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MAP_WIDTH: int&lt;br/&gt;+ MAP_Y: int&lt;br/&gt;+ MAP_X: int&lt;br/&gt;+ MAP_HEIGHT: int&lt;br/&gt;- tiles: List&amp;lt;MapTile&amp;gt;&lt;br/&gt;- house: TankHouse&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ clearDestroyTile(): void&lt;br/&gt;- isCollide(List&amp;lt;MapTile&amp;gt;, int, int): boolean&lt;br/&gt;+ addCol(int, int, int, int, int): void&lt;br/&gt;- invokeMethod(String, String[]): void&lt;br/&gt;+ initMap(int): void&lt;br/&gt;+ getTiles(): List&amp;lt;MapTile&amp;gt;&lt;br/&gt;- loadLevel(int): void&lt;br/&gt;- addHouse(): void&lt;br/&gt;+ drawBk(Graphics): void&lt;br/&gt;+ drawCover(Graphics): void&lt;br/&gt;+ addRow(int, int, int, int, int): void&lt;br/&gt;+ addRect(int, int, int, int, int, int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="373" y="-437" width="301" height="497" as="geometry" />
    </mxCell>
    <mxCell id="node9" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;LevelInof&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- LevelInof(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- level: int&lt;br/&gt;- enemyCount: int&lt;br/&gt;- instance: LevelInof&lt;br/&gt;- crossTime: int&lt;br/&gt;- enemyType: int[]&lt;br/&gt;- levelType: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getLevel(): int&lt;br/&gt;+ setCrossTime(int): void&lt;br/&gt;+ setLevelType(int): void&lt;br/&gt;+ getRandomEnemyType(): int&lt;br/&gt;+ setLevel(int): void&lt;br/&gt;+ getCrossTime(): int&lt;br/&gt;+ getEnemyType(): int[]&lt;br/&gt;+ getInstance(): LevelInof&lt;br/&gt;+ getEnemyCount(): int&lt;br/&gt;+ getLevelType(): int&lt;br/&gt;+ setEnemyType(int[]): void&lt;br/&gt;+ setEnemyCount(int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="912" y="1123" width="222" height="497" as="geometry" />
    </mxCell>
    <mxCell id="node19" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MapTile&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MapTile(): &lt;br/&gt;+ MapTile(int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- type: int&lt;br/&gt;+ radius: int&lt;br/&gt;- x: int&lt;br/&gt;- y: int&lt;br/&gt;+ TYPE_HARD: int&lt;br/&gt;+ TYPE_COVER: int&lt;br/&gt;- tileImg: Image[]&lt;br/&gt;- visible: boolean&lt;br/&gt;+ TYPE_HOUSE: int&lt;br/&gt;+ TYPE_NORMAL: int&lt;br/&gt;+ tileW: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ isHouse(): boolean&lt;br/&gt;+ setY(int): void&lt;br/&gt;+ getX(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getY(): int&lt;br/&gt;+ getType(): int&lt;br/&gt;+ draw(Graphics): void&lt;br/&gt;+ setX(int): void&lt;br/&gt;+ isVisible(): boolean&lt;br/&gt;+ setVisible(boolean): void&lt;br/&gt;+ setType(int): void&lt;br/&gt;+ isCollideBullet(List&amp;lt;Bullet&amp;gt;): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="45" y="-509" width="276" height="641" as="geometry" />
    </mxCell>
    <mxCell id="node13" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MapTilePool&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MapTilePool(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- pool: List&amp;lt;MapTile&amp;gt;&lt;br/&gt;+ POOL_MAX_SIZE: int&lt;br/&gt;+ DEFAULT_POOL_SIZE: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ get(): MapTile&lt;br/&gt;+ theReturn(MapTile): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="122" y="2759" width="202" height="185" as="geometry" />
    </mxCell>
    <mxCell id="node11" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MusicUtil&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MusicUtil(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- bomb: AudioClip&lt;br/&gt;- start: AudioClip&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ playStart(): void&lt;br/&gt;+ playBomb(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="267" y="2451" width="152" height="161" as="geometry" />
    </mxCell>
    <mxCell id="node7" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MyTank&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MyTank(int, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- tankImg: Image[]&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ drawImgTank(Graphics): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="929" y="2795" width="229" height="122" as="geometry" />
    </mxCell>
    <mxCell id="node2" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MyUtil&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- MyUtil(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- NAMES: String[]&lt;br/&gt;- MODIFIY: String[]&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getRandomName(): String&lt;br/&gt;+ getRandomColor(): Color&lt;br/&gt;+ isCollide(int, int, int, int, int): boolean&lt;br/&gt;+ getRandomNumber(int, int): int&lt;br/&gt;+ createImage(String): Image&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="747" y="2415" width="272" height="233" as="geometry" />
    </mxCell>
    <mxCell id="node1" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Tank&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Tank(int, int, int): &lt;br/&gt;+ Tank(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- x: int&lt;br/&gt;+ STATE_MOVE: int&lt;br/&gt;- oldX: int&lt;br/&gt;- y: int&lt;br/&gt;+ ATK_MAX: int&lt;br/&gt;- name: String&lt;br/&gt;- state: int&lt;br/&gt;- bar: BloodBar&lt;br/&gt;+ DEFAULT_SPEED: int&lt;br/&gt;- maxHP: int&lt;br/&gt;- dir: int&lt;br/&gt;+ DIR_UP: int&lt;br/&gt;- color: Color&lt;br/&gt;+ DIR_LEFT: int&lt;br/&gt;+ RADIUS: int&lt;br/&gt;+ DIR_RIGHT: int&lt;br/&gt;+ FIRE_INTERVAL: int&lt;br/&gt;- fireTime: long&lt;br/&gt;+ DEFAULT_HP: int&lt;br/&gt;- oldY: int&lt;br/&gt;- atk: int&lt;br/&gt;- explodes: List&amp;lt;Explode&amp;gt;&lt;br/&gt;- bullets: List&amp;lt;Bullet&amp;gt;&lt;br/&gt;+ DIR_DOWN: int&lt;br/&gt;+ ATK_MIN: int&lt;br/&gt;- isEnemy: boolean&lt;br/&gt;+ STATE_DIE: int&lt;br/&gt;- speed: int&lt;br/&gt;- hp: int&lt;br/&gt;+ STATE_STAND: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- drawTank(Graphics): void&lt;br/&gt;+ isEnemy(): boolean&lt;br/&gt;+ bulletsCollideMapTiles(List&amp;lt;MapTile&amp;gt;): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setSpeed(int): void&lt;br/&gt;+ setY(int): void&lt;br/&gt;+ fire(): void&lt;br/&gt;+ setDir(int): void&lt;br/&gt;+ drawExplodes(Graphics): void&lt;br/&gt;+ setState(int): void&lt;br/&gt;+ isCollideTile(List&amp;lt;MapTile&amp;gt;): boolean&lt;br/&gt;+ getBullets(): List&lt;br/&gt;- initTank(): void&lt;br/&gt;+ getDir(): int&lt;br/&gt;+ setName(String): void&lt;br/&gt;+ isDie(): boolean&lt;br/&gt;- delaySecondsToOver(int): void&lt;br/&gt;+ bulletsReturn(): void&lt;br/&gt;- hurt(Bullet): void&lt;br/&gt;- move(): void&lt;br/&gt;- die(): void&lt;br/&gt;+ setAtk(int): void&lt;br/&gt;+ getSpeed(): int&lt;br/&gt;+ setEnemy(boolean): void&lt;br/&gt;+ setBullets(List): void&lt;br/&gt;+ draw(Graphics): void&lt;br/&gt;+ getState(): int&lt;br/&gt;+ drawImgTank(Graphics): void&lt;br/&gt;+ getMaxHP(): int&lt;br/&gt;- drawBullets(Graphics): void&lt;br/&gt;+ back(): void&lt;br/&gt;- addExplode(int, int): void&lt;br/&gt;+ getAtk(): int&lt;br/&gt;+ getColor(): Color&lt;br/&gt;+ getName(): String&lt;br/&gt;- logic(): void&lt;br/&gt;+ setMaxHP(int): void&lt;br/&gt;- drawName(Graphics): void&lt;br/&gt;+ getY(): int&lt;br/&gt;+ getX(): int&lt;br/&gt;+ setHp(int): void&lt;br/&gt;+ setX(int): void&lt;br/&gt;+ setColor(Color): void&lt;br/&gt;+ collideBullets(List&amp;lt;Bullet&amp;gt;): void&lt;br/&gt;+ getHp(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-156" y="426" width="319" height="1891" as="geometry" />
    </mxCell>
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TankHouse&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TankHouse(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ HOUSE_X: int&lt;br/&gt;- tiles: List&amp;lt;MapTile&amp;gt;&lt;br/&gt;+ HOUSE_Y: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ draw(Graphics): void&lt;br/&gt;+ getTiles(): List&amp;lt;MapTile&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1082" y="2438" width="202" height="187" as="geometry" />
    </mxCell>
    <mxCell id="node5" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TestLineNumber&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TestLineNumber(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ counter: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ counterDirCodeLines(File): void&lt;br/&gt;+ counterFileCodeLines(File): int&lt;br/&gt;+ main(String[]): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="603" y="2771" width="240" height="161" as="geometry" />
    </mxCell>
    <mxCell id="edge1" edge="1" value="" parent="1" source="node16" target="node1" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="-37" y="2391" />
          <mxPoint x="3" y="2391" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge0" edge="1" value="" parent="1" source="node7" target="node1" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1043" y="2391" />
          <mxPoint x="3" y="2391" />
        </Array>
      </mxGeometry>
    </mxCell>
  </root>
</mxGraphModel>